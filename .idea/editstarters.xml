<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="spring_boot_project_cache">
    <option name="projectJson" value="{&quot;bootVersion&quot;:{&quot;major&quot;:2,&quot;minor&quot;:7,&quot;patch&quot;:7,&quot;originalText&quot;:&quot;2.7.7&quot;},&quot;modules&quot;:[{&quot;name&quot;:&quot;Developer Tools&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;devtools&quot;,&quot;name&quot;:&quot;Spring Boot DevTools&quot;,&quot;description&quot;:&quot;Provides fast application restarts, LiveReload, and configurations for enhanced development experience.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-devtools&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;lombok&quot;,&quot;name&quot;:&quot;Lombok&quot;,&quot;description&quot;:&quot;Java annotation library which helps to reduce boilerplate code.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.projectlombok&quot;,&quot;artifactId&quot;:&quot;lombok&quot;,&quot;scope&quot;:&quot;annotationProcessor&quot;},{&quot;id&quot;:&quot;configuration-processor&quot;,&quot;name&quot;:&quot;Spring Configuration Processor&quot;,&quot;description&quot;:&quot;Generate metadata for developers to offer contextual help and \&quot;code completion\&quot; when working with custom configuration keys (ex.application.properties/.yml files).&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-configuration-processor&quot;,&quot;scope&quot;:&quot;annotationProcessor&quot;}]},{&quot;name&quot;:&quot;Web&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;web&quot;,&quot;name&quot;:&quot;Spring Web&quot;,&quot;description&quot;:&quot;Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-web&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;webflux&quot;,&quot;name&quot;:&quot;Spring Reactive Web&quot;,&quot;description&quot;:&quot;Build reactive web applications with Spring WebFlux and Netty.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-webflux&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;graphql&quot;,&quot;name&quot;:&quot;Spring for GraphQL&quot;,&quot;description&quot;:&quot;Build GraphQL applications with Spring for GraphQL and GraphQL Java.&quot;,&quot;versionRange&quot;:&quot;2.7.0-M1&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-graphql&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-rest&quot;,&quot;name&quot;:&quot;Rest Repositories&quot;,&quot;description&quot;:&quot;Exposing Spring Data repositories over REST via Spring Data REST.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-rest&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;session&quot;,&quot;name&quot;:&quot;Spring Session&quot;,&quot;description&quot;:&quot;Provides an API and implementations for managing user session information.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.session&quot;,&quot;artifactId&quot;:&quot;spring-session-core&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-rest-explorer&quot;,&quot;name&quot;:&quot;Rest Repositories HAL Explorer&quot;,&quot;description&quot;:&quot;Browsing Spring Data REST repositories in your browser.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.data&quot;,&quot;artifactId&quot;:&quot;spring-data-rest-hal-explorer&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;hateoas&quot;,&quot;name&quot;:&quot;Spring HATEOAS&quot;,&quot;description&quot;:&quot;Eases the creation of RESTful APIs that follow the HATEOAS principle when working with Spring / Spring MVC.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-hateoas&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;web-services&quot;,&quot;name&quot;:&quot;Spring Web Services&quot;,&quot;description&quot;:&quot;Facilitates contract-first SOAP development. Allows for the creation of flexible web services using one of the many ways to manipulate XML payloads.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-web-services&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;jersey&quot;,&quot;name&quot;:&quot;Jersey&quot;,&quot;description&quot;:&quot;Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-jersey&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;vaadin&quot;,&quot;name&quot;:&quot;Vaadin&quot;,&quot;description&quot;:&quot;A web framework that allows you to write UI in pure Java without getting bogged down in JS, HTML, and CSS.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.vaadin&quot;,&quot;artifactId&quot;:&quot;vaadin-bom&quot;,&quot;version&quot;:&quot;23.3.18&quot;},&quot;groupId&quot;:&quot;com.vaadin&quot;,&quot;artifactId&quot;:&quot;vaadin-spring-boot-starter&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Template Engines&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;thymeleaf&quot;,&quot;name&quot;:&quot;Thymeleaf&quot;,&quot;description&quot;:&quot;A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-thymeleaf&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;freemarker&quot;,&quot;name&quot;:&quot;Apache Freemarker&quot;,&quot;description&quot;:&quot;Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-freemarker&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;mustache&quot;,&quot;name&quot;:&quot;Mustache&quot;,&quot;description&quot;:&quot;Logic-less templates for both web and standalone environments. There are no if statements, else clauses, or for loops. Instead there are only tags.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-mustache&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;groovy-templates&quot;,&quot;name&quot;:&quot;Groovy Templates&quot;,&quot;description&quot;:&quot;Groovy templating engine.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-groovy-templates&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Security&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;security&quot;,&quot;name&quot;:&quot;Spring Security&quot;,&quot;description&quot;:&quot;Highly customizable authentication and access-control framework for Spring applications.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-security&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;oauth2-client&quot;,&quot;name&quot;:&quot;OAuth2 Client&quot;,&quot;description&quot;:&quot;Spring Boot integration for Spring Security\u0027s OAuth2/OpenID Connect client features.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-oauth2-client&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;oauth2-resource-server&quot;,&quot;name&quot;:&quot;OAuth2 Resource Server&quot;,&quot;description&quot;:&quot;Spring Boot integration for Spring Security\u0027s OAuth2 resource server features.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-oauth2-resource-server&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-ldap&quot;,&quot;name&quot;:&quot;Spring LDAP&quot;,&quot;description&quot;:&quot;Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-ldap&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;okta&quot;,&quot;name&quot;:&quot;Okta&quot;,&quot;description&quot;:&quot;Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.okta.spring&quot;,&quot;artifactId&quot;:&quot;okta-spring-boot-starter&quot;,&quot;version&quot;:&quot;2.1.6&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;SQL&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;jdbc&quot;,&quot;name&quot;:&quot;JDBC API&quot;,&quot;description&quot;:&quot;Database Connectivity API that defines how a client may connect and query a database.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-jdbc&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-jpa&quot;,&quot;name&quot;:&quot;Spring Data JPA&quot;,&quot;description&quot;:&quot;Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-jpa&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-jdbc&quot;,&quot;name&quot;:&quot;Spring Data JDBC&quot;,&quot;description&quot;:&quot;Persist data in SQL stores with plain JDBC using Spring Data.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-jdbc&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-r2dbc&quot;,&quot;name&quot;:&quot;Spring Data R2DBC&quot;,&quot;description&quot;:&quot;Provides Reactive Relational Database Connectivity to persist data in SQL stores using Spring Data in reactive applications.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-r2dbc&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;mybatis&quot;,&quot;name&quot;:&quot;MyBatis Framework&quot;,&quot;description&quot;:&quot;Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.mybatis.spring.boot&quot;,&quot;artifactId&quot;:&quot;mybatis-spring-boot-starter&quot;,&quot;version&quot;:&quot;2.3.1&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;liquibase&quot;,&quot;name&quot;:&quot;Liquibase Migration&quot;,&quot;description&quot;:&quot;Liquibase database migration and source control library.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.liquibase&quot;,&quot;artifactId&quot;:&quot;liquibase-core&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;flyway&quot;,&quot;name&quot;:&quot;Flyway Migration&quot;,&quot;description&quot;:&quot;Version control for your database so you can migrate from any version (incl. an empty database) to the latest version of the schema.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.flywaydb&quot;,&quot;artifactId&quot;:&quot;flyway-core&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;jooq&quot;,&quot;name&quot;:&quot;JOOQ Access Layer&quot;,&quot;description&quot;:&quot;Generate Java code from your database and build type safe SQL queries through a fluent API.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-jooq&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;db2&quot;,&quot;name&quot;:&quot;IBM DB2 Driver&quot;,&quot;description&quot;:&quot;A JDBC driver that provides access to IBM DB2.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.ibm.db2&quot;,&quot;artifactId&quot;:&quot;jcc&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;derby&quot;,&quot;name&quot;:&quot;Apache Derby Database&quot;,&quot;description&quot;:&quot;An open source relational database implemented entirely in Java.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.apache.derby&quot;,&quot;artifactId&quot;:&quot;derby&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;h2&quot;,&quot;name&quot;:&quot;H2 Database&quot;,&quot;description&quot;:&quot;Provides a fast in-memory database that supports JDBC API and R2DBC access, with a small (2mb) footprint. Supports embedded and server modes as well as a browser based console application.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.h2database&quot;,&quot;artifactId&quot;:&quot;h2&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;hsql&quot;,&quot;name&quot;:&quot;HyperSQL Database&quot;,&quot;description&quot;:&quot;Lightweight 100% Java SQL Database Engine.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.hsqldb&quot;,&quot;artifactId&quot;:&quot;hsqldb&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;mariadb&quot;,&quot;name&quot;:&quot;MariaDB Driver&quot;,&quot;description&quot;:&quot;MariaDB JDBC and R2DBC driver.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.mariadb.jdbc&quot;,&quot;artifactId&quot;:&quot;mariadb-java-client&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;sqlserver&quot;,&quot;name&quot;:&quot;MS SQL Server Driver&quot;,&quot;description&quot;:&quot;A JDBC and R2DBC driver that provides access to Microsoft SQL Server and Azure SQL Database from any Java application.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.microsoft.sqlserver&quot;,&quot;artifactId&quot;:&quot;mssql-jdbc&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;mysql&quot;,&quot;name&quot;:&quot;MySQL Driver&quot;,&quot;description&quot;:&quot;MySQL JDBC driver.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.mysql&quot;,&quot;artifactId&quot;:&quot;mysql-connector-j&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;oracle&quot;,&quot;name&quot;:&quot;Oracle Driver&quot;,&quot;description&quot;:&quot;A JDBC driver that provides access to Oracle.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.oracle.database.jdbc&quot;,&quot;artifactId&quot;:&quot;ojdbc8&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;postgresql&quot;,&quot;name&quot;:&quot;PostgreSQL Driver&quot;,&quot;description&quot;:&quot;A JDBC and R2DBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.postgresql&quot;,&quot;artifactId&quot;:&quot;postgresql&quot;,&quot;scope&quot;:&quot;runtime&quot;}]},{&quot;name&quot;:&quot;NoSQL&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;data-redis&quot;,&quot;name&quot;:&quot;Spring Data Redis (Access+Driver)&quot;,&quot;description&quot;:&quot;Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-redis&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-redis-reactive&quot;,&quot;name&quot;:&quot;Spring Data Reactive Redis&quot;,&quot;description&quot;:&quot;Access Redis key-value data stores in a reactive fashion with Spring Data Redis.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-redis-reactive&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-mongodb&quot;,&quot;name&quot;:&quot;Spring Data MongoDB&quot;,&quot;description&quot;:&quot;Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-mongodb&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-mongodb-reactive&quot;,&quot;name&quot;:&quot;Spring Data Reactive MongoDB&quot;,&quot;description&quot;:&quot;Provides asynchronous stream processing with non-blocking back pressure for MongoDB.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-mongodb-reactive&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-elasticsearch&quot;,&quot;name&quot;:&quot;Spring Data Elasticsearch (Access+Driver)&quot;,&quot;description&quot;:&quot;A distributed, RESTful search and analytics engine with Spring Data Elasticsearch.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-elasticsearch&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-cassandra&quot;,&quot;name&quot;:&quot;Spring Data for Apache Cassandra&quot;,&quot;description&quot;:&quot;A free and open-source, distributed, NoSQL database management system that offers high-scalability and high-performance.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-cassandra&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-cassandra-reactive&quot;,&quot;name&quot;:&quot;Spring Data Reactive for Apache Cassandra&quot;,&quot;description&quot;:&quot;Access Cassandra NoSQL Database in a reactive fashion.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-cassandra-reactive&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-couchbase&quot;,&quot;name&quot;:&quot;Spring Data Couchbase&quot;,&quot;description&quot;:&quot;NoSQL document-oriented database that offers in memory-first architecture, geo-distributed deployments, and workload isolation.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-couchbase&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-couchbase-reactive&quot;,&quot;name&quot;:&quot;Spring Data Reactive Couchbase&quot;,&quot;description&quot;:&quot;Access Couchbase NoSQL database in a reactive fashion with Spring Data Couchbase.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-couchbase-reactive&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;data-neo4j&quot;,&quot;name&quot;:&quot;Spring Data Neo4j&quot;,&quot;description&quot;:&quot;An open source NoSQL database that stores data structured as graphs consisting of nodes, connected by relationships.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-data-neo4j&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Messaging&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;integration&quot;,&quot;name&quot;:&quot;Spring Integration&quot;,&quot;description&quot;:&quot;Adds support for Enterprise Integration Patterns. Enables lightweight messaging and supports integration with external systems via declarative adapters.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-integration&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;amqp&quot;,&quot;name&quot;:&quot;Spring for RabbitMQ&quot;,&quot;description&quot;:&quot;Gives your applications a common platform to send and receive messages, and your messages a safe place to live until received.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-amqp&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;kafka&quot;,&quot;name&quot;:&quot;Spring for Apache Kafka&quot;,&quot;description&quot;:&quot;Publish, subscribe, store, and process streams of records.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.kafka&quot;,&quot;artifactId&quot;:&quot;spring-kafka&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;kafka-streams&quot;,&quot;name&quot;:&quot;Spring for Apache Kafka Streams&quot;,&quot;description&quot;:&quot;Building stream processing applications with Apache Kafka Streams.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.apache.kafka&quot;,&quot;artifactId&quot;:&quot;kafka-streams&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;activemq&quot;,&quot;name&quot;:&quot;Spring for Apache ActiveMQ 5&quot;,&quot;description&quot;:&quot;Spring JMS support with Apache ActiveMQ \u0027Classic\u0027.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-activemq&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;artemis&quot;,&quot;name&quot;:&quot;Spring for Apache ActiveMQ Artemis&quot;,&quot;description&quot;:&quot;Spring JMS support with Apache ActiveMQ Artemis.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-artemis&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;websocket&quot;,&quot;name&quot;:&quot;WebSocket&quot;,&quot;description&quot;:&quot;Build Servlet-based WebSocket applications with SockJS and STOMP.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-websocket&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;rsocket&quot;,&quot;name&quot;:&quot;RSocket&quot;,&quot;description&quot;:&quot;RSocket.io applications with Spring Messaging and Netty.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-rsocket&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;camel&quot;,&quot;name&quot;:&quot;Apache Camel&quot;,&quot;description&quot;:&quot;Apache Camel is an open source integration framework that empowers you to quickly and easily integrate various systems consuming or producing data.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.apache.camel.springboot&quot;,&quot;artifactId&quot;:&quot;camel-spring-boot-starter&quot;,&quot;version&quot;:&quot;3.20.6&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;solace&quot;,&quot;name&quot;:&quot;Solace PubSub+&quot;,&quot;description&quot;:&quot;Connect to a Solace PubSub+ Advanced Event Broker to publish, subscribe, request/reply and store/replay messages&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.solace.spring.boot&quot;,&quot;artifactId&quot;:&quot;solace-spring-boot-bom&quot;,&quot;version&quot;:&quot;1.2.2&quot;},&quot;groupId&quot;:&quot;com.solace.spring.boot&quot;,&quot;artifactId&quot;:&quot;solace-spring-boot-starter&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;I/O&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;batch&quot;,&quot;name&quot;:&quot;Spring Batch&quot;,&quot;description&quot;:&quot;Batch applications with transactions, retry/skip and chunk based processing.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-batch&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;validation&quot;,&quot;name&quot;:&quot;Validation&quot;,&quot;description&quot;:&quot;Bean Validation with Hibernate validator.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-validation&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;mail&quot;,&quot;name&quot;:&quot;Java Mail Sender&quot;,&quot;description&quot;:&quot;Send email using Java Mail and Spring Framework\u0027s JavaMailSender.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-mail&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;quartz&quot;,&quot;name&quot;:&quot;Quartz Scheduler&quot;,&quot;description&quot;:&quot;Schedule jobs using Quartz.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-quartz&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cache&quot;,&quot;name&quot;:&quot;Spring cache abstraction&quot;,&quot;description&quot;:&quot;Provides cache-related operations, such as the ability to update the content of the cache, but does not provide the actual data store.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-cache&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;picocli&quot;,&quot;name&quot;:&quot;Picocli&quot;,&quot;description&quot;:&quot;Build command line applications with picocli.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.1.0-M1)&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;info.picocli&quot;,&quot;artifactId&quot;:&quot;picocli-spring-boot-starter&quot;,&quot;version&quot;:&quot;4.7.4&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;spring-shell&quot;,&quot;name&quot;:&quot;Spring Shell&quot;,&quot;description&quot;:&quot;Build command line applications with spring.&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.shell&quot;,&quot;artifactId&quot;:&quot;spring-shell-dependencies&quot;,&quot;version&quot;:&quot;2.1.12&quot;},&quot;groupId&quot;:&quot;org.springframework.shell&quot;,&quot;artifactId&quot;:&quot;spring-shell-starter&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Ops&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;actuator&quot;,&quot;name&quot;:&quot;Spring Boot Actuator&quot;,&quot;description&quot;:&quot;Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.boot&quot;,&quot;artifactId&quot;:&quot;spring-boot-starter-actuator&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;codecentric-spring-boot-admin-client&quot;,&quot;name&quot;:&quot;codecentric\u0027s Spring Boot Admin (Client)&quot;,&quot;description&quot;:&quot;Required for your application to register with a Codecentric\u0027s Spring Boot Admin Server instance.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;de.codecentric&quot;,&quot;artifactId&quot;:&quot;spring-boot-admin-dependencies&quot;,&quot;version&quot;:&quot;2.7.4&quot;},&quot;groupId&quot;:&quot;de.codecentric&quot;,&quot;artifactId&quot;:&quot;spring-boot-admin-starter-client&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;codecentric-spring-boot-admin-server&quot;,&quot;name&quot;:&quot;codecentric\u0027s Spring Boot Admin (Server)&quot;,&quot;description&quot;:&quot;A community project to manage and monitor your Spring Boot applications. Provides a UI on top of the Spring Boot Actuator endpoints.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;de.codecentric&quot;,&quot;artifactId&quot;:&quot;spring-boot-admin-dependencies&quot;,&quot;version&quot;:&quot;2.7.4&quot;},&quot;groupId&quot;:&quot;de.codecentric&quot;,&quot;artifactId&quot;:&quot;spring-boot-admin-starter-server&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;sentry&quot;,&quot;name&quot;:&quot;Sentry&quot;,&quot;description&quot;:&quot;Application performance monitoring and error tracking that help software teams see clearer, solve quicker, and learn continuously.&quot;,&quot;versionRange&quot;:&quot;[2.7.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;io.sentry&quot;,&quot;artifactId&quot;:&quot;sentry-bom&quot;,&quot;version&quot;:&quot;6.28.0&quot;},&quot;groupId&quot;:&quot;io.sentry&quot;,&quot;artifactId&quot;:&quot;sentry-spring-boot-starter&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Observability&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;datadog&quot;,&quot;name&quot;:&quot;Datadog&quot;,&quot;description&quot;:&quot;Publish Micrometer metrics to Datadog, a dimensional time-series SaaS with built-in dashboarding and alerting.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-datadog&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;dynatrace&quot;,&quot;name&quot;:&quot;Dynatrace&quot;,&quot;description&quot;:&quot;Publish Micrometer metrics to Dynatrace, a platform featuring observability, AIOps, application security and analytics.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-dynatrace&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;influx&quot;,&quot;name&quot;:&quot;Influx&quot;,&quot;description&quot;:&quot;Publish Micrometer metrics to InfluxDB, a dimensional time-series server that support real-time stream processing of data.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-influx&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;graphite&quot;,&quot;name&quot;:&quot;Graphite&quot;,&quot;description&quot;:&quot;Publish Micrometer metrics to Graphite, a hierarchical metrics system backed by a fixed-size database.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-graphite&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;new-relic&quot;,&quot;name&quot;:&quot;New Relic&quot;,&quot;description&quot;:&quot;Publish Micrometer metrics to New Relic, a SaaS offering with a full UI and a query language called NRQL.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-new-relic&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;prometheus&quot;,&quot;name&quot;:&quot;Prometheus&quot;,&quot;description&quot;:&quot;Expose Micrometer metrics in Prometheus format, an in-memory dimensional time series database with a simple built-in UI, a custom query language, and math operations.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;io.micrometer&quot;,&quot;artifactId&quot;:&quot;micrometer-registry-prometheus&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;distributed-tracing&quot;,&quot;name&quot;:&quot;Distributed Tracing&quot;,&quot;description&quot;:&quot;Enable span and trace IDs in logs.&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-sleuth&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;wavefront&quot;,&quot;name&quot;:&quot;Wavefront&quot;,&quot;description&quot;:&quot;Publish metrics and optionally distributed traces to Tanzu Observability by Wavefront, a SaaS-based metrics monitoring and analytics platform that lets you visualize, query, and alert over data from across your entire stack.&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.wavefront&quot;,&quot;artifactId&quot;:&quot;wavefront-spring-boot-bom&quot;,&quot;version&quot;:&quot;2.3.4&quot;},&quot;groupId&quot;:&quot;com.wavefront&quot;,&quot;artifactId&quot;:&quot;wavefront-spring-boot-starter&quot;,&quot;scope&quot;:&quot;runtime&quot;},{&quot;id&quot;:&quot;zipkin&quot;,&quot;name&quot;:&quot;Zipkin&quot;,&quot;description&quot;:&quot;Enable and expose span and trace IDs to Zipkin.&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-sleuth-zipkin&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Testing&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;restdocs&quot;,&quot;name&quot;:&quot;Spring REST Docs&quot;,&quot;description&quot;:&quot;Document RESTful services by combining hand-written with Asciidoctor and auto-generated snippets produced with Spring MVC Test.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;org.springframework.restdocs&quot;,&quot;artifactId&quot;:&quot;spring-restdocs-mockmvc&quot;,&quot;scope&quot;:&quot;test&quot;},{&quot;id&quot;:&quot;testcontainers&quot;,&quot;name&quot;:&quot;Testcontainers&quot;,&quot;description&quot;:&quot;Provide lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.testcontainers&quot;,&quot;artifactId&quot;:&quot;testcontainers-bom&quot;,&quot;version&quot;:&quot;1.18.3&quot;},&quot;groupId&quot;:&quot;org.testcontainers&quot;,&quot;artifactId&quot;:&quot;junit-jupiter&quot;,&quot;scope&quot;:&quot;test&quot;},{&quot;id&quot;:&quot;cloud-contract-verifier&quot;,&quot;name&quot;:&quot;Contract Verifier&quot;,&quot;description&quot;:&quot;Moves TDD to the level of software architecture by enabling Consumer Driven Contract (CDC) development.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-contract-verifier&quot;,&quot;scope&quot;:&quot;test&quot;},{&quot;id&quot;:&quot;cloud-contract-stub-runner&quot;,&quot;name&quot;:&quot;Contract Stub Runner&quot;,&quot;description&quot;:&quot;Stub Runner for HTTP/Messaging based communication. Allows creating WireMock stubs from RestDocs tests.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-contract-stub-runner&quot;,&quot;scope&quot;:&quot;test&quot;},{&quot;id&quot;:&quot;unboundid-ldap&quot;,&quot;name&quot;:&quot;Embedded LDAP Server&quot;,&quot;description&quot;:&quot;Provides a platform neutral way for running a LDAP server in unit tests.&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;com.unboundid&quot;,&quot;artifactId&quot;:&quot;unboundid-ldapsdk&quot;,&quot;scope&quot;:&quot;test&quot;},{&quot;id&quot;:&quot;flapdoodle-mongo&quot;,&quot;name&quot;:&quot;Embedded MongoDB Database&quot;,&quot;description&quot;:&quot;Provides a platform neutral way for running MongoDB in unit tests.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.0.0-M1)&quot;,&quot;repositories&quot;:[],&quot;groupId&quot;:&quot;de.flapdoodle.embed&quot;,&quot;artifactId&quot;:&quot;de.flapdoodle.embed.mongo&quot;,&quot;scope&quot;:&quot;test&quot;}]},{&quot;name&quot;:&quot;Spring Cloud&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-starter&quot;,&quot;name&quot;:&quot;Cloud Bootstrap&quot;,&quot;description&quot;:&quot;Non-specific Spring Cloud features, unrelated to external libraries or integrations (e.g. Bootstrap context and @RefreshScope).&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-function&quot;,&quot;name&quot;:&quot;Function&quot;,&quot;description&quot;:&quot;Promotes the implementation of business logic via functions and supports a uniform programming model across serverless providers, as well as the ability to run standalone (locally or in a PaaS).&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-function-context&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-task&quot;,&quot;name&quot;:&quot;Task&quot;,&quot;description&quot;:&quot;Allows a user to develop and run short lived microservices using Spring Cloud. Run them locally, in the cloud, and on Spring Cloud Data Flow.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-task&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Spring Cloud Config&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-config-client&quot;,&quot;name&quot;:&quot;Config Client&quot;,&quot;description&quot;:&quot;Client that connects to a Spring Cloud Config Server to fetch the application\u0027s configuration.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-config&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-config-server&quot;,&quot;name&quot;:&quot;Config Server&quot;,&quot;description&quot;:&quot;Central management for configuration via Git, SVN, or HashiCorp Vault.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-config-server&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-starter-vault-config&quot;,&quot;name&quot;:&quot;Vault Configuration&quot;,&quot;description&quot;:&quot;Provides client-side support for externalized configuration in a distributed system. Using HashiCorp\u0027s Vault you have a central place to manage external secret properties for applications across all environments.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-vault-config&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-starter-zookeeper-config&quot;,&quot;name&quot;:&quot;Apache Zookeeper Configuration&quot;,&quot;description&quot;:&quot;Enable and configure common patterns inside your application and build large distributed systems with Apache Zookeeper based components. The provided patterns include Service Discovery and Configuration.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-zookeeper-config&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-starter-consul-config&quot;,&quot;name&quot;:&quot;Consul Configuration&quot;,&quot;description&quot;:&quot;Enable and configure the common patterns inside your application and build large distributed systems with Hashicorp’s Consul. The patterns provided include Service Discovery, Distributed Configuration and Control Bus.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-consul-config&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Spring Cloud Discovery&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-eureka&quot;,&quot;name&quot;:&quot;Eureka Discovery Client&quot;,&quot;description&quot;:&quot;A REST based service for locating services for the purpose of load balancing and failover of middle-tier servers.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-netflix-eureka-client&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-eureka-server&quot;,&quot;name&quot;:&quot;Eureka Server&quot;,&quot;description&quot;:&quot;spring-cloud-netflix Eureka Server.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-netflix-eureka-server&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-starter-zookeeper-discovery&quot;,&quot;name&quot;:&quot;Apache Zookeeper Discovery&quot;,&quot;description&quot;:&quot;Service discovery with Apache Zookeeper.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-zookeeper-discovery&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-cloudfoundry-discovery&quot;,&quot;name&quot;:&quot;Cloud Foundry Discovery&quot;,&quot;description&quot;:&quot;Service discovery with Cloud Foundry.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.0.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-cloudfoundry-discovery&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-starter-consul-discovery&quot;,&quot;name&quot;:&quot;Consul Discovery&quot;,&quot;description&quot;:&quot;Service discovery with Hashicorp Consul.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-consul-discovery&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Spring Cloud Routing&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-gateway&quot;,&quot;name&quot;:&quot;Gateway&quot;,&quot;description&quot;:&quot;Provides a simple, yet effective way to route to APIs and provide cross cutting concerns to them such as security, monitoring/metrics, and resiliency.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-gateway&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-feign&quot;,&quot;name&quot;:&quot;OpenFeign&quot;,&quot;description&quot;:&quot;Declarative REST Client. OpenFeign creates a dynamic implementation of an interface decorated with JAX-RS or Spring MVC annotations.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-openfeign&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-loadbalancer&quot;,&quot;name&quot;:&quot;Cloud LoadBalancer&quot;,&quot;description&quot;:&quot;Client-side load-balancing with Spring Cloud LoadBalancer.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-loadbalancer&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Spring Cloud Circuit Breaker&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-resilience4j&quot;,&quot;name&quot;:&quot;Resilience4J&quot;,&quot;description&quot;:&quot;Spring Cloud Circuit breaker with Resilience4j as the underlying implementation.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-starter-circuitbreaker-resilience4j&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Spring Cloud Messaging&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-bus&quot;,&quot;name&quot;:&quot;Cloud Bus&quot;,&quot;description&quot;:&quot;Links nodes of a distributed system with a lightweight message broker which can used to broadcast state changes or other management instructions (requires a binder, e.g. Apache Kafka or RabbitMQ).&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-bus&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-stream&quot;,&quot;name&quot;:&quot;Cloud Stream&quot;,&quot;description&quot;:&quot;Framework for building highly scalable event-driven microservices connected with shared messaging systems (requires a binder, e.g. Apache Kafka, Apache Pulsar, RabbitMQ, or Solace PubSub+).&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-dependencies&quot;,&quot;version&quot;:&quot;2021.0.8&quot;},&quot;groupId&quot;:&quot;org.springframework.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-stream&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;VMware Tanzu Application Service&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;scs-config-client&quot;,&quot;name&quot;:&quot;Config Client (TAS)&quot;,&quot;description&quot;:&quot;Config client on VMware Tanzu Application Service.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;io.pivotal.spring.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-services-dependencies&quot;,&quot;version&quot;:&quot;3.5.0&quot;},&quot;groupId&quot;:&quot;io.pivotal.spring.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-services-starter-config-client&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;scs-service-registry&quot;,&quot;name&quot;:&quot;Service Registry (TAS)&quot;,&quot;description&quot;:&quot;Eureka service discovery client on VMware Tanzu Application Service.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;io.pivotal.spring.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-services-dependencies&quot;,&quot;version&quot;:&quot;3.5.0&quot;},&quot;groupId&quot;:&quot;io.pivotal.spring.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-services-starter-service-registry&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Microsoft Azure&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;azure-support&quot;,&quot;name&quot;:&quot;Azure Support&quot;,&quot;description&quot;:&quot;Auto-configuration for Azure Services (Service Bus, Storage, Active Directory, Key Vault, and more).&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-dependencies&quot;,&quot;version&quot;:&quot;4.10.0&quot;},&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-starter&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;azure-active-directory&quot;,&quot;name&quot;:&quot;Azure Active Directory&quot;,&quot;description&quot;:&quot;Spring Security integration with Azure Active Directory for authentication.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-dependencies&quot;,&quot;version&quot;:&quot;4.10.0&quot;},&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-starter-active-directory&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;azure-cosmos-db&quot;,&quot;name&quot;:&quot;Azure Cosmos DB&quot;,&quot;description&quot;:&quot;Fully managed NoSQL database service for modern app development, including Spring Data support.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-dependencies&quot;,&quot;version&quot;:&quot;4.10.0&quot;},&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-starter-data-cosmos&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;azure-keyvault&quot;,&quot;name&quot;:&quot;Azure Key Vault&quot;,&quot;description&quot;:&quot;All key vault features are supported, e.g. manage application secrets and certificates.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-dependencies&quot;,&quot;version&quot;:&quot;4.10.0&quot;},&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-starter-keyvault&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;azure-storage&quot;,&quot;name&quot;:&quot;Azure Storage&quot;,&quot;description&quot;:&quot;All Storage features are supported, e.g. blob, fileshare and queue.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-dependencies&quot;,&quot;version&quot;:&quot;4.10.0&quot;},&quot;groupId&quot;:&quot;com.azure.spring&quot;,&quot;artifactId&quot;:&quot;spring-cloud-azure-starter-storage&quot;,&quot;scope&quot;:&quot;compile&quot;}]},{&quot;name&quot;:&quot;Google Cloud Platform&quot;,&quot;values&quot;:[{&quot;id&quot;:&quot;cloud-gcp&quot;,&quot;name&quot;:&quot;GCP Support&quot;,&quot;description&quot;:&quot;Contains auto-configuration support for every Spring Cloud GCP integration. Most of the auto-configuration code is only enabled if other dependencies are added to the classpath.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-dependencies&quot;,&quot;version&quot;:&quot;3.6.2&quot;},&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-starter&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-gcp-pubsub&quot;,&quot;name&quot;:&quot;GCP Messaging&quot;,&quot;description&quot;:&quot;Adds the GCP Support entry and all the required dependencies so that the Google Cloud Pub/Sub integration work out of the box.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-dependencies&quot;,&quot;version&quot;:&quot;3.6.2&quot;},&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-starter-pubsub&quot;,&quot;scope&quot;:&quot;compile&quot;},{&quot;id&quot;:&quot;cloud-gcp-storage&quot;,&quot;name&quot;:&quot;GCP Storage&quot;,&quot;description&quot;:&quot;Adds the GCP Support entry and all the required dependencies so that the Google Cloud Storage integration work out of the box.&quot;,&quot;versionRange&quot;:&quot;[2.6.0,3.2.0-M1)&quot;,&quot;repositories&quot;:[],&quot;bom&quot;:{&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-dependencies&quot;,&quot;version&quot;:&quot;3.6.2&quot;},&quot;groupId&quot;:&quot;com.google.cloud&quot;,&quot;artifactId&quot;:&quot;spring-cloud-gcp-starter-storage&quot;,&quot;scope&quot;:&quot;compile&quot;}]}]}" />
    <option name="updateTime" value="1691640485471" />
    <option name="url" value="https://start.spring.io/" />
    <option name="version" value="2.7.7" />
  </component>
</project>